var app=function(){"use strict";function e(){}function r(e){return e()}function s(){return Object.create(null)}function t(e){e.forEach(r)}function o(e){return"function"==typeof e}function n(e,r){return e!=e?r==r:e!==r||e&&"object"==typeof e||"function"==typeof e}function i(e,r){e.appendChild(r)}function a(e,r,s){e.insertBefore(r,s||null)}function c(e){e.parentNode.removeChild(e)}function l(e){return document.createElement(e)}function p(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function u(e){return document.createTextNode(e)}function d(){return u(" ")}function m(e,r,s){null==s?e.removeAttribute(r):e.getAttribute(r)!==s&&e.setAttribute(r,s)}let g;function h(e){g=e}function T(){if(!g)throw new Error("Function called outside component initialization");return g}const w=[],f=[],b=[],E=[],v=Promise.resolve();let _=!1;function y(e){b.push(e)}let x=!1;const k=new Set;function G(){if(!x){x=!0;do{for(let e=0;e<w.length;e+=1){const r=w[e];h(r),P(r.$$)}for(h(null),w.length=0;f.length;)f.pop()();for(let e=0;e<b.length;e+=1){const r=b[e];k.has(r)||(k.add(r),r())}b.length=0}while(w.length);for(;E.length;)E.pop()();_=!1,x=!1,k.clear()}}function P(e){if(null!==e.fragment){e.update(),t(e.before_update);const r=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,r),e.after_update.forEach(y)}}const A=new Set;let O;function S(e,r){e&&e.i&&(A.delete(e),e.i(r))}function C(e,r,s,t){if(e&&e.o){if(A.has(e))return;A.add(e),O.c.push((()=>{A.delete(e),t&&(s&&e.d(1),t())})),e.o(r)}}function R(e,r){const s=r.token={};function o(e,o,n,i){if(r.token!==s)return;r.resolved=i;let a=r.ctx;void 0!==n&&(a=a.slice(),a[n]=i);const c=e&&(r.current=e)(a);let l=!1;r.block&&(r.blocks?r.blocks.forEach(((e,s)=>{s!==o&&e&&(O={r:0,c:[],p:O},C(e,1,1,(()=>{r.blocks[s]===e&&(r.blocks[s]=null)})),O.r||t(O.c),O=O.p)})):r.block.d(1),c.c(),S(c,1),c.m(r.mount(),r.anchor),l=!0),r.block=c,r.blocks&&(r.blocks[o]=c),l&&G()}if((n=e)&&"object"==typeof n&&"function"==typeof n.then){const s=T();if(e.then((e=>{h(s),o(r.then,1,r.value,e),h(null)}),(e=>{if(h(s),o(r.catch,2,r.error,e),h(null),!r.hasCatch)throw e})),r.current!==r.pending)return o(r.pending,0),!0}else{if(r.current!==r.then)return o(r.then,1,r.value,e),!0;r.resolved=e}var n}function F(e){e&&e.c()}function U(e,s,n){const{fragment:i,on_mount:a,on_destroy:c,after_update:l}=e.$$;i&&i.m(s,n),y((()=>{const s=a.map(r).filter(o);c?c.push(...s):t(s),e.$$.on_mount=[]})),l.forEach(y)}function $(e,r){const s=e.$$;null!==s.fragment&&(t(s.on_destroy),s.fragment&&s.fragment.d(r),s.on_destroy=s.fragment=null,s.ctx=[])}function j(e,r){-1===e.$$.dirty[0]&&(w.push(e),_||(_=!0,v.then(G)),e.$$.dirty.fill(0)),e.$$.dirty[r/31|0]|=1<<r%31}function D(r,o,n,i,a,l,p=[-1]){const u=g;h(r);const d=o.props||{},m=r.$$={fragment:null,ctx:null,props:l,update:e,not_equal:a,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:s(),dirty:p,skip_bound:!1};let T=!1;if(m.ctx=n?n(r,d,((e,s,...t)=>{const o=t.length?t[0]:s;return m.ctx&&a(m.ctx[e],m.ctx[e]=o)&&(!m.skip_bound&&m.bound[e]&&m.bound[e](o),T&&j(r,e)),s})):[],m.update(),T=!0,t(m.before_update),m.fragment=!!i&&i(m.ctx),o.target){if(o.hydrate){const e=function(e){return Array.from(e.childNodes)}(o.target);m.fragment&&m.fragment.l(e),e.forEach(c)}else m.fragment&&m.fragment.c();o.intro&&S(r.$$.fragment),U(r,o.target,o.anchor),G()}h(u)}class L{$destroy(){$(this,1),this.$destroy=e}$on(e,r){const s=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return s.push(r),()=>{const e=s.indexOf(r);-1!==e&&s.splice(e,1)}}$set(e){var r;this.$$set&&(r=e,0!==Object.keys(r).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function q(e){let r,s;return{c(){r=p("svg"),s=p("path"),m(s,"fill","currentColor"),m(s,"d","M494.2 221.9l-59.8-40.5 13.7-71c2.6-13.2-1.6-26.8-11.1-36.4-9.6-9.5-23.2-13.7-36.2-11.1l-70.9 13.7-40.4-59.9c-15.1-22.3-51.9-22.3-67 0l-40.4 59.9-70.8-13.7C98 60.4 84.5 64.5 75 74.1c-9.5 9.6-13.7 23.1-11.1 36.3l13.7 71-59.8 40.5C6.6 229.5 0 242 0 255.5s6.7 26 17.8 33.5l59.8 40.5-13.7 71c-2.6 13.2 1.6 26.8 11.1 36.3 9.5 9.5 22.9 13.7 36.3 11.1l70.8-13.7 40.4 59.9C230 505.3 242.6 512 256 512s26-6.7 33.5-17.8l40.4-59.9 70.9 13.7c13.4 2.7 26.8-1.6 36.3-11.1 9.5-9.5 13.6-23.1 11.1-36.3l-13.7-71 59.8-40.5c11.1-7.5 17.8-20.1 17.8-33.5-.1-13.6-6.7-26.1-17.9-33.7zm-112.9 85.6l17.6 91.2-91-17.6L256 458l-51.9-77-90.9 17.6 17.6-91.2-76.8-52 76.8-52-17.6-91.2 91 17.6L256 53l51.9 76.9 91-17.6-17.6 91.1 76.8 52-76.8 52.1zM256 152c-57.3 0-104 46.7-104 104s46.7 104 104 104 104-46.7 104-104-46.7-104-104-104zm0 160c-30.9 0-56-25.1-56-56s25.1-56 56-56 56 25.1 56 56-25.1 56-56 56z"),m(r,"aria-hidden","true"),m(r,"focusable","false"),m(r,"data-prefix","far"),m(r,"data-icon","sun"),m(r,"class","svg-inline--fa fa-sun fa-w-16"),m(r,"role","img"),m(r,"xmlns","http://www.w3.org/2000/svg"),m(r,"viewBox","0 0 512 512")},m(e,t){a(e,r,t),i(r,s)},d(e){e&&c(r)}}}function I(e){let r,s;return{c(){r=p("svg"),s=p("path"),m(s,"fill","currentColor"),m(s,"d","M279.135 512c78.756 0 150.982-35.804 198.844-94.775 28.27-34.831-2.558-85.722-46.249-77.401-82.348 15.683-158.272-47.268-158.272-130.792 0-48.424 26.06-92.292 67.434-115.836 38.745-22.05 28.999-80.788-15.022-88.919A257.936 257.936 0 0 0 279.135 0c-141.36 0-256 114.575-256 256 0 141.36 114.576 256 256 256zm0-464c12.985 0 25.689 1.201 38.016 3.478-54.76 31.163-91.693 90.042-91.693 157.554 0 113.848 103.641 199.2 215.252 177.944C402.574 433.964 344.366 464 279.135 464c-114.875 0-208-93.125-208-208s93.125-208 208-208z"),m(r,"aria-hidden","true"),m(r,"focusable","false"),m(r,"data-prefix","far"),m(r,"data-icon","moon"),m(r,"class","svg-inline--fa fa-moon fa-w-16"),m(r,"role","img"),m(r,"xmlns","http://www.w3.org/2000/svg"),m(r,"viewBox","0 0 512 512")},m(e,t){a(e,r,t),i(r,s)},d(e){e&&c(r)}}}function H(r){let s,t,o;function n(e,r){return e[0]?I:q}let i=n(r),p=i(r);return{c(){s=l("div"),p.c(),m(s,"class","absolute top-0 right-0 w-8 h-8 p-2")},m(e,n){var i,c,l,u;a(e,s,n),p.m(s,null),t||(i=s,c="click",l=r[1],i.addEventListener(c,l,u),o=()=>i.removeEventListener(c,l,u),t=!0)},p(e,[r]){i!==(i=n(e))&&(p.d(1),p=i(e),p&&(p.c(),p.m(s,null)))},i:e,o:e,d(e){e&&c(s),p.d(),t=!1,o()}}}const z="themePreference";function B(e,r,s){let t=!1;function o(e){s(0,t=e),document.documentElement.classList.toggle("dark",t)}var n;return n=()=>{const e=window.localStorage.getItem(z);("dark"===e||null==e&&window.matchMedia("(prefers-color-scheme: dark)").matches)&&o(!0)},T().$$.on_mount.push(n),[t,function(){o(!t),window.localStorage.setItem(z,t?"dark":"light")}]}class M extends L{constructor(e){super(),D(this,e,B,H,n,{})}}class W extends L{constructor(e){super(),D(this,e,null,null,n,{})}}function N(r){let s,t,o,n,i,p;return s=new W({}),o=new M({}),{c(){F(s.$$.fragment),t=d(),F(o.$$.fragment),n=d(),i=l("main"),i.innerHTML='<nav class="flex-initial"><div class="flex-none h-22 px-5 flex items-center justify-around pt-5 "><div class="flex items-center hidden sm:flex "><div class="ml-6 leading-none"><div class=""><a href="#" class=" font-bold text-2xl  hover:text-highlightblue">Adam</a></div></div></div> \n\n            <div class="flex flex-col justify-center text-2xl"><div class="flex items-center justify-center max-w-full text-bgblue"><div class="mx-3 hover:text-white"><a href="#" class="">Home</a></div> \n                    <div class="mx-3 hover:text-white"><a href="#">About</a></div> \n                    <div class="mx-3 hover:text-white"><a href="#">Services</a></div> \n                    <div class="mx-3 hover:text-white"><a href="#">Projects</a></div></div></div> \n\n            <div class=" items-center justify-center hidden sm:flex "><button class="bg-gradient-to-b from-darkgblue to-bgblue text-white font-semibold py-2 px-8 rounded-full shadow "><p class="mx-2 text-xl ">Contact</p></button></div></div></nav> \n\n    <div class="grid grid-cols-3 flex-1 pb-12"><div class=" flex  pl-8 "><div class="ml-auto my-auto order-2"><h1 class=" invisible md:visible   text-5xl lg:text-7xl font-extrabold">Hello, <br/> I&#39;m <span class="text-highlightblue">Adam.</span></h1> \n                <h2 class="invisible md:visible text-xl lg:text-2xl">Developer, Designer and Student</h2></div></div> \n\n        <div class=" items-center justify-center flex flex-col "><img src="images/Black.png" width="300px" height="auto"/> \n            <div class="flex flex-none lg:hidden  justify-center"><div class="flex flex-row justify-center items-center my-2"><h1 class="font-bold text-xl mx-2">UI/UX</h1> \n                        <h1 class="font-bold text-xl mx-2">Development</h1> \n                        <h1 class="font-bold text-xl mx-2">Design</h1></div></div></div></div> \n\n\n    <div class="hidden lg:flex absolute pos1 shadow rounded-2xl backdrop-blur cc justify-center svelte-1xkytkd"><div class="flex flex-row justify-center items-center my-2"><svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" fill="currentColor" class="bi bi-pencil mx-4" viewBox="0 0 16 16"><path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z"></path></svg> \n            <div class="flex flex-col mr-8 "><h1 class="font-bold text-xl">Design</h1></div></div></div> \n\n    <div class="hidden lg:flex absolute pos2 shadow rounded-2xl backdrop-blur cc justify-center svelte-1xkytkd"><div class="flex flex-row justify-center items-center my-2"><svg xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" width="120" height="120" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path></svg><div class="flex flex-col mr-8 "><h1 class="font-bold text-xl">Development</h1> \n                <h3 class="">Full Stack</h3></div></div></div> \n\n    <div class="hidden lg:flex absolute pos3 shadow rounded-2xl backdrop-blur cc justify-center svelte-1xkytkd"><div class="flex flex-row justify-center items-center my-2"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" class="bi bi-ui-checks-grid mx-4" viewBox="0 0 16 16"><path d="M2 10h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1zm9-9h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm0 9a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-3zm0-10a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h3a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2h-3zM2 9a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h3a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H2zm7 2a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-3a2 2 0 0 1-2-2v-3zM0 2a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.354.854a.5.5 0 1 0-.708-.708L3 3.793l-.646-.647a.5.5 0 1 0-.708.708l1 1a.5.5 0 0 0 .708 0l2-2z"></path></svg> \n            <div class="flex flex-col mr-8 "><h1 class="font-bold text-xl">UI/UX</h1></div></div></div>',m(i,"class","h-screen flex flex-col text-bgblue")},m(e,r){U(s,e,r),a(e,t,r),U(o,e,r),a(e,n,r),a(e,i,r),p=!0},p:e,i(e){p||(S(s.$$.fragment,e),S(o.$$.fragment,e),p=!0)},o(e){C(s.$$.fragment,e),C(o.$$.fragment,e),p=!1},d(e){$(s,e),e&&c(t),$(o,e),e&&c(n),e&&c(i)}}}class K extends L{constructor(e){super(),D(this,e,null,N,n,{})}}function V(r){let s,t,o,n,i,p;return s=new W({}),o=new M({}),{c(){F(s.$$.fragment),t=d(),F(o.$$.fragment),n=d(),i=l("main"),i.innerHTML='<div class="absolute h-72 w-72 pos1 text-gray-500  bg-blue-900 rounded-full blurred svelte-1xb9nag"></div> \n    <div class="absolute h-96 w-96 pos2 text-gray-500  bg-green-200 opacity-30 rounded-full blurred svelte-1xb9nag"></div> \n    <div class="absolute h-96 w-96 pos3 text-gray-500  bg-purple-700 opacity-10  rounded-full blurred svelte-1xb9nag"></div> \n\n    <div class=" flex flex-1 flex-row min-h-full justify-around items-center z"><div class="hidden xl:flex flex-1 justify-center "><div class="flex pl-8"><h1 class="text-3xl md:text-5xl lg:text-7xl font-extrabold">Here&#39;s what <br/>I can do.</h1></div></div> \n\n        <div class="flex-col flex flex-1 items-center justify-center"><div class="flex xl:hidden  flex-1 justify-center items-center "><h1 class="text-3xl md:text-5xl lg:text-7xl font-extrabold mb-5">Here&#39;s what I can do.</h1></div> \n            <div class="flex-row flex"><div class=" w-56 h-16 lg:w-64 lg:h-24     shadow rounded-xl backdrop-blur cc  flex items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/js.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl ml-4">Javascript</h1></div> \n\n\n                <div class=" w-56 h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  flex items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/html5.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                        <h1 class="font-bold text-xl mx-4">HTML5</h1></div> \n\n                <div class="hidden md:flex md:w-56 md:h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/ps.webp" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl mx-4">Photoshop</h1></div></div> \n\n            <div class="flex-row flex"><div class="w-56 h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  flex items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/gopher.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl ml-4">Go</h1></div> \n\n\n                <div class="w-56 h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  flex items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/svelte.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl mx-4">Svelte</h1></div> \n\n                <div class="hidden md:flex md:w-56 md:h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/xd.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl mx-4">XD</h1></div></div> \n\n            <div class="flex-row flex"><div class="w-56 h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  flex items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/tailwind.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl ml-4">Tailwind</h1></div> \n\n\n                <div class="w-56 h-16 lg:w-64 lg:h-24  shadow rounded-xl backdrop-blur cc  flex items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/python.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl mx-4">Python</h1></div> \n\n                <div class="hidden md:flex md:w-56 md:h-16 lg:w-64 lg:h-24 shadow rounded-xl backdrop-blur cc  items-center mx-4 my-4 svelte-1xb9nag"><img src="images/logos/git.png" height="auto" width="56px" class="rounded-xl mx-4"/> \n                    <h1 class="font-bold text-xl mx-4">Git</h1></div></div></div></div>',m(i,"class","h-screen bg-bgblue flex-col text-whiteblue ")},m(e,r){U(s,e,r),a(e,t,r),U(o,e,r),a(e,n,r),a(e,i,r),p=!0},p:e,i(e){p||(S(s.$$.fragment,e),S(o.$$.fragment,e),p=!0)},o(e){C(s.$$.fragment,e),C(o.$$.fragment,e),p=!1},d(e){$(s,e),e&&c(t),$(o,e),e&&c(n),e&&c(i)}}}class J extends L{constructor(e){super(),D(this,e,null,V,n,{})}}function Z(r){let s,t,o,n,i,p;return s=new W({}),o=new M({}),{c(){F(s.$$.fragment),t=d(),F(o.$$.fragment),n=d(),i=l("main"),i.innerHTML='<div class="py-16 mb-12  text-bgblue font-extrabold text-6xl flex justify-center items-center"><h1>Recent Projects</h1></div> \n\n    <div class="flex flex-1 flex-col items-center px-16"><div class="grid grid-cols-2 items-center py-12"><div class="flex flex-col"><a href="#" class="hover:text-white text-highlightblue font-bold text-4xl">getmoney.com</a> \n                <h4 class="text-bgblue text-xl">Cryptocurrency platform</h4></div> \n            <div class="ml-12"><img src="images/crypto.png" width="650px" height="auto" class="rounded-xl shadow-md"/></div></div> \n\n        <div class="grid grid-cols-2 items-center py-12"><div class="flex flex-col"><a href="#" class="hover:text-white text-highlightblue font-bold text-4xl">miramar.qa</a> \n                <h4 class="text-bgblue text-xl">Architecture and Consulting platform for thousands of plans.</h4></div> \n            <div class="ml-12"><img src="images/miramar.png" width="650px" height="auto" class="rounded-xl shadow-md"/></div></div> \n\n        <div class="grid grid-cols-2 items-center py-12"><div class="flex flex-col"><a href="#" class="hover:text-white text-highlightblue font-bold text-4xl">codemetoafterlife.game</a> \n                <h4 class="text-bgblue text-xl">Frontend for Code Me To Afterlife, isometric pixel-art  programming   <br/>game,   for beginners and advanced coders.</h4></div> \n            <div class="ml-12"><img src="images/afterlife.png" width="650px" height="auto" class="rounded-xl shadow-md"/></div></div></div>',m(i,"class"," flex flex-1 flex-col justify-center  text-whiteblue  bg-gradient-to-tl to-lgrayblue from-white")},m(e,r){U(s,e,r),a(e,t,r),U(o,e,r),a(e,n,r),a(e,i,r),p=!0},p:e,i(e){p||(S(s.$$.fragment,e),S(o.$$.fragment,e),p=!0)},o(e){C(s.$$.fragment,e),C(o.$$.fragment,e),p=!1},d(e){$(s,e),e&&c(t),$(o,e),e&&c(n),e&&c(i)}}}class X extends L{constructor(e){super(),D(this,e,null,Z,n,{})}}function Y(){return"object"==typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"==typeof process&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var Q=function e(r,s,t,o){if("function"!=typeof t)throw new Error("method for before hook must be a function");o||(o={});if(Array.isArray(s))return s.reverse().reduce((function(s,t){return e.bind(null,r,t,s,o)}),t)();return Promise.resolve().then((function(){return r.registry[s]?r.registry[s].reduce((function(e,r){return r.hook.bind(null,e,o)}),t)():t(o)}))};var ee=function(e,r,s,t){var o=t;e.registry[s]||(e.registry[s]=[]);"before"===r&&(t=function(e,r){return Promise.resolve().then(o.bind(null,r)).then(e.bind(null,r))});"after"===r&&(t=function(e,r){var s;return Promise.resolve().then(e.bind(null,r)).then((function(e){return o(s=e,r)})).then((function(){return s}))});"error"===r&&(t=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return o(e,r)}))});e.registry[s].push({hook:t,orig:o})};var re=function(e,r,s){if(!e.registry[r])return;var t=e.registry[r].map((function(e){return e.orig})).indexOf(s);if(-1===t)return;e.registry[r].splice(t,1)};var se=Function.bind,te=se.bind(se);function oe(e,r,s){var t=te(re,null).apply(null,s?[r,s]:[r]);e.api={remove:t},e.remove=t,["before","error","after","wrap"].forEach((function(t){var o=s?[r,t,s]:[r,t];e[t]=e.api[t]=te(ee,null).apply(null,o)}))}function ne(){var e={registry:{}},r=Q.bind(null,e);return oe(r,e),r}var ie=!1;function ae(){return ie||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),ie=!0),ne()}ae.Singular=function(){var e={registry:{}},r=Q.bind(null,e,"h");return oe(r,e,"h"),r}.bind(),ae.Collection=ne.bind();var ce=ae,le=ae,pe=ae.Singular,ue=ae.Collection;
/*!
     * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */
function de(e){return"[object Object]"===Object.prototype.toString.call(e)}function me(e){var r,s;return!1!==de(e)&&(void 0===(r=e.constructor)||!1!==de(s=r.prototype)&&!1!==s.hasOwnProperty("isPrototypeOf"))}function ge(e,r){const s=Object.assign({},e);return Object.keys(r).forEach((t=>{me(r[t])?t in e?s[t]=ge(e[t],r[t]):Object.assign(s,{[t]:r[t]}):Object.assign(s,{[t]:r[t]})})),s}function he(e){for(const r in e)void 0===e[r]&&delete e[r];return e}function Te(e,r,s){if("string"==typeof r){let[e,t]=r.split(" ");s=Object.assign(t?{method:e,url:t}:{url:e},s)}else s=Object.assign({},r);var t;s.headers=(t=s.headers)?Object.keys(t).reduce(((e,r)=>(e[r.toLowerCase()]=t[r],e)),{}):{},he(s),he(s.headers);const o=ge(e||{},s);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map((e=>e.replace(/-preview/,""))),o}ce.Hook=le,ce.Singular=pe,ce.Collection=ue;const we=/\{[^}]+\}/g;function fe(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function be(e,r){return Object.keys(e).filter((e=>!r.includes(e))).reduce(((r,s)=>(r[s]=e[s],r)),{})}function Ee(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function ve(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function _e(e,r,s){return r="+"===e||"#"===e?Ee(r):ve(r),s?ve(s)+"="+r:r}function ye(e){return null!=e}function xe(e){return";"===e||"&"===e||"?"===e}function ke(e,r){var s=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,t,o){if(t){let e="";const o=[];if(-1!==s.indexOf(t.charAt(0))&&(e=t.charAt(0),t=t.substr(1)),t.split(/,/g).forEach((function(s){var t=/([^:\*]*)(?::(\d+)|(\*))?/.exec(s);o.push(function(e,r,s,t){var o=e[s],n=[];if(ye(o)&&""!==o)if("string"==typeof o||"number"==typeof o||"boolean"==typeof o)o=o.toString(),t&&"*"!==t&&(o=o.substring(0,parseInt(t,10))),n.push(_e(r,o,xe(r)?s:""));else if("*"===t)Array.isArray(o)?o.filter(ye).forEach((function(e){n.push(_e(r,e,xe(r)?s:""))})):Object.keys(o).forEach((function(e){ye(o[e])&&n.push(_e(r,o[e],e))}));else{const e=[];Array.isArray(o)?o.filter(ye).forEach((function(s){e.push(_e(r,s))})):Object.keys(o).forEach((function(s){ye(o[s])&&(e.push(ve(s)),e.push(_e(r,o[s].toString())))})),xe(r)?n.push(ve(s)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===r?ye(o)&&n.push(ve(s)):""!==o||"&"!==r&&"?"!==r?""===o&&n.push(""):n.push(ve(s)+"=");return n}(r,e,t[1],t[2]||t[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==o.length?e:"")+o.join(n)}return o.join(",")}return Ee(o)}))}function Ge(e){let r,s=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),n=be(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const r=e.match(we);return r?r.map(fe).reduce(((e,r)=>e.concat(r)),[]):[]}(t);var a;t=(a=t,{expand:ke.bind(null,a)}).expand(n),/^http/.test(t)||(t=e.baseUrl+t);const c=be(n,Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map((r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),e.mediaType.previews.length)){const r=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=r.concat(e.mediaType.previews).map((r=>`application/vnd.github.${r}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(s)?t=function(e,r){const s=/\?/.test(e)?"&":"?",t=Object.keys(r);return 0===t.length?e:e+s+t.map((e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`)).join("&")}(t,c):"data"in c?r=c.data:Object.keys(c).length?r=c:o["content-length"]=0,o["content-type"]||void 0===r||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(s)&&void 0===r&&(r=""),Object.assign({method:s,url:t,headers:o},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}function Pe(e,r,s){return Ge(Te(e,r,s))}const Ae=function e(r,s){const t=Te(r,s),o=Pe.bind(null,t);return Object.assign(o,{DEFAULTS:t,defaults:e.bind(null,t),merge:Te.bind(null,t),parse:Ge})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/6.0.10 ${Y()}`},mediaType:{format:"",previews:[]}});var Oe,Se=(function(e,r){var s=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==s)return s;throw new Error("unable to locate global object")}();e.exports=r=s.fetch,s.fetch&&(r.default=s.fetch.bind(s)),r.Headers=s.Headers,r.Request=s.Request,r.Response=s.Response}(Oe={exports:{}},Oe.exports),Oe.exports);class Ce extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var Re=function e(r,s){if(r&&s)return e(r)(s);if("function"!=typeof r)throw new TypeError("need wrapper function");return Object.keys(r).forEach((function(e){t[e]=r[e]})),t;function t(){for(var e=new Array(arguments.length),s=0;s<e.length;s++)e[s]=arguments[s];var t=r.apply(this,e),o=e[e.length-1];return"function"==typeof t&&t!==o&&Object.keys(o).forEach((function(e){t[e]=o[e]})),t}};var Fe=Re($e),Ue=Re(je);function $e(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function je(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},s=e.name||"Function wrapped with `once`";return r.onceError=s+" shouldn't be called more than once",r.called=!1,r}$e.proto=$e((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return $e(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return je(this)},configurable:!0})})),Fe.strict=Ue;const De=Fe((e=>console.warn(e)));class Le extends Error{constructor(e,r,s){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,Object.defineProperty(this,"code",{get:()=>(De(new Ce("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),this.headers=s.headers||{};const t=Object.assign({},s.request);s.request.headers.authorization&&(t.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),t.url=t.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=t}}function qe(e){(me(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,s,t={};return(e.request&&e.request.fetch||Se)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((o=>{s=o.url,r=o.status;for(const e of o.headers)t[e[0]]=e[1];if(204===r||205===r)return;if("HEAD"===e.method){if(r<400)return;throw new Le(o.statusText,r,{headers:t,request:e})}if(304===r)throw new Le("Not modified",r,{headers:t,request:e});if(r>=400)return o.text().then((s=>{const o=new Le(s,r,{headers:t,request:e});try{let e=JSON.parse(o.message);Object.assign(o,e);let r=e.errors;o.message=o.message+": "+r.map(JSON.stringify).join(", ")}catch(e){}throw o}));const n=o.headers.get("content-type");return/application\/json/.test(n)?o.json():!n||/^text\/|charset=utf-8$/.test(n)?o.text():function(e){return e.arrayBuffer()}(o)})).then((e=>({status:r,url:s,headers:t,data:e}))).catch((r=>{if(r instanceof Le)throw r;throw new Le(r.message,500,{headers:t,request:e})}))}const Ie=function e(r,s){const t=r.defaults(s);return Object.assign((function(r,s){const o=t.merge(r,s);if(!o.request||!o.request.hook)return qe(t.parse(o));const n=(e,r)=>qe(t.parse(t.merge(e,r)));return Object.assign(n,{endpoint:t,defaults:e.bind(null,t)}),o.request.hook(n,o)}),{endpoint:t,defaults:e.bind(null,t)})}(Ae,{headers:{"user-agent":`octokit-request.js/5.4.12 ${Y()}`}});class He extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),Object.assign(this,{headers:r.headers}),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const ze=["method","baseUrl","url","headers","request","query","mediaType"],Be=/\/api\/v3\/?$/;function Me(e,r){const s=e.defaults(r);return Object.assign(((e,r)=>function(e,r,s){if("string"==typeof r&&s&&"query"in s)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));const t="string"==typeof r?Object.assign({query:r},s):r,o=Object.keys(t).reduce(((e,r)=>ze.includes(r)?(e[r]=t[r],e):(e.variables||(e.variables={}),e.variables[r]=t[r],e)),{}),n=t.baseUrl||e.endpoint.DEFAULTS.baseUrl;return Be.test(n)&&(o.url=n.replace(Be,"/api/graphql")),e(o).then((e=>{if(e.data.errors){const r={};for(const s of Object.keys(e.headers))r[s]=e.headers[s];throw new He(o,{headers:r,data:e.data})}return e.data.data}))}(s,e,r)),{defaults:Me.bind(null,s),endpoint:Ie.endpoint})}async function We(e){const r=3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}async function Ne(e,r,s,t){const o=r.endpoint.merge(s,t);return o.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),r(o)}Me(Ie,{headers:{"user-agent":`octokit-graphql.js/4.5.8 ${Y()}`},method:"POST",url:"/graphql"});const Ke=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(We.bind(null,e),{hook:Ne.bind(null,e)})},Ve="3.2.4";class Je{constructor(e={}){const r=new ue,s={baseUrl:Ie.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};var t;if(s.headers["user-agent"]=[e.userAgent,`octokit-core.js/3.2.4 ${Y()}`].filter(Boolean).join(" "),e.baseUrl&&(s.baseUrl=e.baseUrl),e.previews&&(s.mediaType.previews=e.previews),e.timeZone&&(s.headers["time-zone"]=e.timeZone),this.request=Ie.defaults(s),this.graphql=(t=this.request,Me(t,{method:"POST",url:"/graphql"})).defaults(s),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=r,e.authStrategy){const{authStrategy:s,...t}=e,o=s(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:t},e.auth));r.wrap("request",o.hook),this.auth=o}else if(e.auth){const s=Ke(e.auth);r.wrap("request",s.hook),this.auth=s}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((r=>{Object.assign(this,r(this,e))}))}static defaults(e){return class extends(this){constructor(...r){const s=r[0]||{};super("function"!=typeof e?Object.assign({},e,s,s.userAgent&&e.userAgent?{userAgent:`${s.userAgent} ${e.userAgent}`}:null):e(s))}}}static plugin(...e){var r;const s=this.plugins;return(r=class extends(this){}).plugins=s.concat(e.filter((e=>!s.includes(e)))),r}}Je.VERSION=Ve,Je.plugins=[];function Ze(e){e.hook.wrap("request",((r,s)=>{e.log.debug("request",s);const t=Date.now(),o=e.request.endpoint.parse(s),n=o.url.replace(s.baseUrl,"");return r(s).then((r=>(e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-t}ms`),r))).catch((r=>{throw e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-t}ms`),r}))}))}Ze.VERSION="1.0.2";function Xe(e,r,s){const t="function"==typeof r?r.endpoint(s):e.request.endpoint(r,s),o="function"==typeof r?r:e.request,n=t.method,i=t.headers;let a=t.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};const e=function(e){if(!("total_count"in e.data)||"url"in e.data)return e;const r=e.data.incomplete_results,s=e.data.repository_selection,t=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const o=Object.keys(e.data)[0],n=e.data[o];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==s&&(e.data.repository_selection=s),e.data.total_count=t,e}(await o({method:n,url:a,headers:i}));return a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}}})}}function Ye(e,r,s,t){return"function"==typeof s&&(t=s,s=void 0),Qe(e,[],Xe(e,r,s)[Symbol.asyncIterator](),t)}function Qe(e,r,s,t){return s.next().then((o=>{if(o.done)return r;let n=!1;return r=r.concat(t?t(o.value,(function(){n=!0})):o.value.data),n?r:Qe(e,r,s,t)}))}function er(e){return{paginate:Object.assign(Ye.bind(null,e),{iterator:Xe.bind(null,e)})}}Object.assign(Ye,{iterator:Xe}),er.VERSION="2.8.0";const rr={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits"]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function sr(e,r,s,t,o){const n=e.request.defaults(t);return Object.assign((function(...t){let i=n.endpoint.merge(...t);if(o.mapToData)return i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:void 0}),n(i);if(o.renamed){const[t,n]=o.renamed;e.log.warn(`octokit.${r}.${s}() has been renamed to octokit.${t}.${n}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const i=n.endpoint.merge(...t);for(const[t,n]of Object.entries(o.renamedParameters))t in i&&(e.log.warn(`"${t}" parameter is deprecated for "octokit.${r}.${s}()". Use "${n}" instead`),n in i||(i[n]=i[t]),delete i[t]);return n(i)}return n(...t)}),n)}function tr(e){return function(e,r){const s={};for(const[t,o]of Object.entries(r))for(const[r,n]of Object.entries(o)){const[o,i,a]=n,[c,l]=o.split(/ /),p=Object.assign({method:c,url:l},i);s[t]||(s[t]={});const u=s[t];u[r]=a?sr(e,t,r,p,a):e.request.defaults(p)}return s}(e,rr)}tr.VERSION="4.8.0";const or=new(Je.plugin(Ze,tr,er).defaults({userAgent:"octokit-rest.js/18.0.14"}))({auth:"8f397710a1cbd288eddbad95492d091b57ee9959"});function nr(e,r,s){const t=e.slice();return t[1]=r[s],t[3]=s,t}function ir(r){return{c:e,m:e,p:e,d:e}}function ar(e){let r,s=e[0],t=[];for(let r=0;r<s.length;r+=1)t[r]=pr(nr(e,s,r));return{c(){r=l("div");for(let e=0;e<t.length;e+=1)t[e].c();m(r,"class","grid grid-cols-3 ")},m(e,s){a(e,r,s);for(let e=0;e<t.length;e+=1)t[e].m(r,null)},p(e,o){if(0&o){let n;for(s=e[0],n=0;n<s.length;n+=1){const i=nr(e,s,n);t[n]?t[n].p(i,o):(t[n]=pr(i),t[n].c(),t[n].m(r,null))}for(;n<t.length;n+=1)t[n].d(1);t.length=s.length}},d(e){e&&c(r),function(e,r){for(let s=0;s<e.length;s+=1)e[s]&&e[s].d(r)}(t,e)}}}function cr(r){let s,t,o,n=r[1].language+"";return{c(){s=l("div"),t=l("h1"),o=u(n),m(t,"class","mx-4 my-1 "),m(s,"class","mx-8 bg-green-600 inline-block rounded ")},m(e,r){a(e,s,r),i(s,t),i(t,o)},p:e,d(e){e&&c(s)}}}function lr(r){let s,t,o,n,p,g,h,T=r[1].language+"";return{c(){s=l("div"),t=l("h1"),o=u(T),n=d(),p=l("a"),g=l("img"),m(t,"class","mx-4 my-1 "),m(s,"class","mx-8 bg-"+r[1].language+" inline-block rounded "),g.src!==(h="images/logos/github.png")&&m(g,"src","images/logos/github.png"),m(g,"class","float-right mr-5"),m(g,"width","28px"),m(g,"height","auto"),m(p,"href",r[1].html_url),m(p,"target","_blank")},m(e,r){a(e,s,r),i(s,t),i(t,o),a(e,n,r),a(e,p,r),i(p,g)},p:e,d(e){e&&c(s),e&&c(n),e&&c(p)}}}function pr(e){let r,s=e[3]>0&&null!==e[1].language&&function(e){let r,s,t,o,n,p,g,h,T,w,f,b,E=e[0][e[3]].name+"",v=e[1].description+"",_=function(e,r){return"C#"!==e[1].language?lr:cr}(e)(e);return{c(){r=l("div"),s=l("div"),t=l("div"),o=l("div"),n=l("h1"),p=u(E),g=d(),h=l("p"),T=u(v),w=d(),f=l("div"),_.c(),b=d(),m(n,"class","font-semibold text-2xl ml-8 mt-4"),m(h,"class","font-medium px-8"),m(t,"class","flex-grow"),m(f,"class","flex-none mb-2"),m(s,"class"," w-96 h-48 shadow-md rounded-3xl bg-buttonblue flex flex-col flex-1 mx-4 my-4")},m(e,c){a(e,r,c),i(r,s),i(s,t),i(t,o),i(o,n),i(n,p),i(o,g),i(o,h),i(h,T),i(s,w),i(s,f),_.m(f,null),i(r,b)},p(e,r){_.p(e,r)},d(e){e&&c(r),_.d()}}}(e);return{c(){s&&s.c(),r=u("")},m(e,t){s&&s.m(e,t),a(e,r,t)},p(e,r){e[3]>0&&null!==e[1].language&&s.p(e,r)},d(e){s&&s.d(e),e&&c(r)}}}function ur(r){return{c:e,m:e,p:e,d:e}}function dr(e){let r,s,t,o,n,p,u,g,h;r=new W({}),t=new M({});let T={ctx:e,current:null,token:null,hasCatch:!1,pending:ur,then:ar,catch:ir,value:0};return R(async function(){const{data:e}=await or.request("/users/Adam-Alani/repos");return console.log(e),e}(),T),{c(){F(r.$$.fragment),s=d(),F(t.$$.fragment),o=d(),n=l("main"),p=l("div"),p.innerHTML="<h1>Github Projects</h1>",u=d(),g=l("div"),T.block.c(),m(p,"class","py-16 mb-12  text-bgblue font-extrabold text-6xl flex justify-center items-center"),m(g,"class","flex-col flex flex-1 items-center justify-center"),m(n,"class"," flex flex-1 flex-col justify-center   bg-white ")},m(e,c){U(r,e,c),a(e,s,c),U(t,e,c),a(e,o,c),a(e,n,c),i(n,p),i(n,u),i(n,g),T.block.m(g,T.anchor=null),T.mount=()=>g,T.anchor=null,h=!0},p(r,[s]){{const t=(e=r).slice();t[0]=T.resolved,T.block.p(t,s)}},i(e){h||(S(r.$$.fragment,e),S(t.$$.fragment,e),h=!0)},o(e){C(r.$$.fragment,e),C(t.$$.fragment,e),h=!1},d(e){$(r,e),e&&c(s),$(t,e),e&&c(o),e&&c(n),T.block.d(),T.token=null,T=null}}}class mr extends L{constructor(e){super(),D(this,e,null,dr,n,{})}}function gr(r){let s,t,o,n,p,u,g,h,T,w,f,b,E;return s=new W({}),o=new M({}),u=new K({}),h=new J({}),w=new X({}),b=new mr({}),{c(){F(s.$$.fragment),t=d(),F(o.$$.fragment),n=d(),p=l("main"),F(u.$$.fragment),g=d(),F(h.$$.fragment),T=d(),F(w.$$.fragment),f=d(),F(b.$$.fragment),m(p,"class","bg-gradient-to-tl from-gradienttop to-whiteblue h-screen")},m(e,r){U(s,e,r),a(e,t,r),U(o,e,r),a(e,n,r),a(e,p,r),U(u,p,null),i(p,g),U(h,p,null),i(p,T),U(w,p,null),i(p,f),U(b,p,null),E=!0},p:e,i(e){E||(S(s.$$.fragment,e),S(o.$$.fragment,e),S(u.$$.fragment,e),S(h.$$.fragment,e),S(w.$$.fragment,e),S(b.$$.fragment,e),E=!0)},o(e){C(s.$$.fragment,e),C(o.$$.fragment,e),C(u.$$.fragment,e),C(h.$$.fragment,e),C(w.$$.fragment,e),C(b.$$.fragment,e),E=!1},d(e){$(s,e),e&&c(t),$(o,e),e&&c(n),e&&c(p),$(u),$(h),$(w),$(b)}}}return new class extends L{constructor(e){super(),D(this,e,null,gr,n,{})}}({target:document.body,props:{name:"world"}})}();
